FROM jupyter/jupyterhub
MAINTAINER Zeph Grunschlag <zgrunschlag@gmail.com>
# Modified from Thomas Wiecki's container. cf. https://github.com/twiecki/pydata_docker_jupyterhub

RUN apt-get update && apt-get upgrade -y && apt-get install -y wget libsm6 libxrender1 libfontconfig1

# Install miniconda

# For python 2:
RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh && \
     bash Miniconda-latest-Linux-x86_64.sh -b -p /opt/miniconda && \
     rm Miniconda-latest-Linux-x86_64.sh

# For python 3 (notice the only difference is the Continuum URL and filename):
#RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
#    bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda && \
#    rm Miniconda3-latest-Linux-x86_64.sh
    
# For either python 2 or 3
ENV PATH /opt/miniconda/bin:$PATH
RUN chmod -R a+rx /opt/miniconda

# Install PyData modules and IPython dependencies
RUN conda update --quiet --yes conda && \
    conda install --quiet --yes numpy scipy pandas matplotlib cython pyzmq scikit-learn seaborn six \
    	  	  	  	statsmodels theano pip tornado jinja2 sphinx pygments nose readline sqlalchemy

# Install PyData modules and IPython dependencies - try all of anaconda instead
#RUN conda update --quiet --yes conda && \
#    conda install --quiet --yes anaconda 

# Set up IPython kernel (python 2)
RUN pip install file:///srv/ipython && \
    rm -rf /usr/local/share/jupyter/kernels/* && \
    python2 -m IPython kernelspec install-self

# Set up IPython kernel (python 3)
#RUN pip install file:///srv/ipython && \
#    rm -rf /usr/local/share/jupyter/kernels/* && \
#    python3 -m IPython kernelspec install-self

# Clean up
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN conda clean -y -t

# Test
RUN python -c "import numpy, scipy, pandas, matplotlib, matplotlib.pyplot, sklearn, seaborn, statsmodels, theano"
#### END OF MODIFIED THOMAS WIECKI DOCKER ####

# Set up shared folder
RUN mkdir /opt/shared_nbs
RUN chmod a+rwx /opt/shared_nbs

# If you have your own custom jupyterhub config, overwrite it.
ADD jupyterhub_config.py /srv/jupyterhub/jupyterhub_config.py

# Create directories for shared notebooks - examples and dashboard
RUN mkdir /opt/shared_nbs/examples
RUN mkdir /opt/shared_nbs/dashboard
RUN chmod a+rwx /opt/shared_nbs/examples
RUN chmod a+rwx /opt/shared_nbs/dashboard

# Download the ipython-in-depth notebooks
WORKDIR /opt/shared_nbs/examples
RUN git clone https://github.com/ipython/ipython-in-depth.git
RUN git clone https://github.com/jvns/pandas-cookbook.git
RUN git clone --depth 1 https://github.com/ipython-books/cookbook-code ipython-cookbook/
ADD notebooks/ /opt/shared_nbs/examples/

#RUN chmod a+rwx /opt/shared_nbs/ipython-in-depth

#back to the main work directory:
WORKDIR /srv/jupyterhub/

#create filesystem users, inherited by Jupyterhub
ADD users /tmp/users
ADD add_user.sh /tmp/add_user.sh
RUN bash /tmp/add_user.sh /tmp/users
RUN rm /tmp/add_user.sh /tmp/users

# Mark a subdirector of shared folder into volume for sharing data outside the container
VOLUME /opt/shared_nbs/EXTERNAL
